"""
This type stub file was generated by pyright.
"""

import typing

__all__ = ['JArray']
T = typing.TypeVar('T')
U = typing.TypeVar('U')
class JArray(typing.Generic[T]):
    def __new__(cls, tp: typing.Type[T], dims=...) -> JArray[T]:
        ...
    
    @classmethod
    def of(cls, array, dtype: typing.Optional[typing.Type[U]] = ...) -> JArray[U]:
        ...
    
    def __len__(self) -> int:
        ...
    
    def __iter__(self) -> typing.Iterator[T]:
        ...
    
    def __reversed__(self) -> typing.Iterator[T]:
        ...
    
    @typing.overload
    def __getitem__(self, key: int) -> T:
        ...
    
    @typing.overload
    def __getitem__(self, key: slice) -> JArray[T]:
        ...
    
    @typing.overload
    def __setitem__(self, index: int, value: T):
        ...
    
    @typing.overload
    def __setitem__(self, index: slice, value: typing.Sequence[T]):
        ...
    


